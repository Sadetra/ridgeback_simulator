<launch>

  <arg name="run_gazebo_gui" default="true" />
  <arg name="use_sim_time" default="true" />
  <arg name="gui" default="true" />
  <arg name="headless" default="false" />
  <arg name="world_name" default="$(find ridgeback_gazebo)/worlds/ridgeback_race.world" />
  <arg name="joystick_on" default="false" />
  <arg name="verbose" default="false" />

  <!-- Configuration of Ridgeback which you would like to simulate.
       See ridgeback_description for details. -->
  <arg name="config" default="$(optenv RIDGEBACK_CONFIG base)" />

  <!-- Launch Gazebo with the specified world -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="debug" value="0" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="use_sim_time" value="$(arg use_sim_time)" />
    <arg name="headless" value="$(arg headless)" />
    <arg name="world_name" value="$(arg world_name)" />
    <arg name="paused" value="false"/>
    <arg name="verbose"           value="$(arg verbose)"/>
  </include>

  <!-- Load Ridgeback's description, controllers, and teleop nodes. -->
  <include file="$(find ridgeback_description)/launch/description.launch">
    <arg name="config" value="$(arg config)" />
  </include>
  <include file="$(find ridgeback_control)/launch/control.launch" />

  <group if="$(arg joystick_on)">
    <include file="$(find ridgeback_control)/launch/turtle_teleop.launch"/>
  </group>

  <include file="$(find cri_efe_description)/launch/camera.launch"/>


  <rosparam param="/gazebo_ros_control/pid_gains">
    front_left_wheel:
      p: 1
      i: 0.1
      d: 0
    front_right_wheel:
      p: 1
      i: 0.1
      d: 0
    rear_left_wheel:
      p: 1
      i: 0.1
      d: 0
    rear_right_wheel:
      p: 1
      i: 0.1
      d: 0
  </rosparam>

  <!-- Spawn Ridgeback-->

  <node name="spawner_ridgeback" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
        args="-urdf -model ridgeback  -param robot_description -x 0 -y 0 -z 0.1" />

  <node name="spawner_camera" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
      args="-urdf -model camera -param camera_description -x 0 -y 0 -z 0.0" />

</launch>
